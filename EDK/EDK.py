#!/usr/bin/env python
# -*- coding: ISO-8859-15 -*-
#
# generated by wxGlade 0.6.8 on Sun Aug  3 19:39:10 2014
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.frame_1_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        self.New = wx.MenuItem(wxglade_tmp_menu, wx.ID_ANY, _("New Project\t"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.New)
        self.Load = wx.MenuItem(wxglade_tmp_menu, wx.ID_ANY, _("Load Project"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.Load)
        self.Save = wx.MenuItem(wxglade_tmp_menu, wx.ID_ANY, _("Save\tCTRL+S"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.Save)
        self.SaveAs = wx.MenuItem(wxglade_tmp_menu, wx.ID_ANY, _("Save As\tCTRL+SHIFT+S"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.SaveAs)
        self.Quit = wx.MenuItem(wxglade_tmp_menu, wx.ID_ANY, _("Quit\tCTRL+Q"), "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendItem(self.Quit)
        self.frame_1_menubar.Append(wxglade_tmp_menu, _("File"))
        wxglade_tmp_menu = wx.Menu()
        self.frame_1_menubar.Append(wxglade_tmp_menu, _("About"))
        self.SetMenuBar(self.frame_1_menubar)
        # Menu Bar end
        self.notebook_1 = wx.Notebook(self, wx.ID_ANY, style=0)
        self.World = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.Shader = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.text_ctrl_1 = wx.TextCtrl(self.Shader, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.HSCROLL)
        self.list_box_1 = wx.ListBox(self.Shader, wx.ID_ANY, choices=[])
        self.Assets = wx.Panel(self.notebook_1, wx.ID_ANY)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.OnNew, self.New)
        self.Bind(wx.EVT_MENU, self.OnQuit, self.Quit)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle(_("Little Paw EDK (0.1)"))
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("icon.bmp", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((1024, 768))
        self.SetFocus()
        self.World.SetBackgroundColour(wx.Colour(50, 50, 204))
        self.Shader.SetBackgroundColour(wx.Colour(50, 50, 204))
        self.notebook_1.SetFocus()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(3, 3, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_1, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.list_box_1, 0, 0, 0)
        self.Shader.SetSizer(grid_sizer_1)
        self.notebook_1.AddPage(self.World, _("World Editor"))
        self.notebook_1.AddPage(self.Shader, _("Shader Editor"))
        self.notebook_1.AddPage(self.Assets, _("Asset Manager"))
        sizer_1.Add(self.notebook_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade

    def OnNew(self, event):  # wxGlade: MyFrame.<event_handler>
        print "Event handler 'OnNew' not implemented!"
        event.Skip()

    def OnQuit(self, event):  # wxGlade: MyFrame.<event_handler>
        print "Event handler 'OnQuit' not implemented!"
        event.Skip()

# end of class MyFrame
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    dialog_1 = (None, wx.ID_ANY, "")
    app.SetTopWindow(dialog_1)
    dialog_1.Show()
    app.MainLoop()